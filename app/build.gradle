plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    signingConfigs {
        debug {
            keyAlias 'currency'
            keyPassword 'debug123'
            storeFile file('debug-keystore.jks')
            storePassword 'debug123'
        }
        release {
            keyAlias 'release'
            keyPassword 'release123'
            storeFile file('release-keystore.jks')
            storePassword 'release123'
        }
    }

    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.wasir.droid.currencyexchange"
        minSdk rootProject.minSdkVersion
        targetSdk rootProject.targetSdkVersion
        versionCode getVersionCodeTimestamp()
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "com.wasir.droid.currencyexchange.HiltTestRunner"
    }
    Properties properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            buildConfigField("String", "BASE_URL", properties.getProperty("BASE_URL", ""))
            buildConfigField("String", "API_KEY", properties.getProperty("API_KEY", ""))
            versionNameSuffix "-pre"
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", properties.getProperty("BASE_URL", ""))
            buildConfigField("String", "API_KEY", properties.getProperty("API_KEY", ""))
            signingConfig signingConfigs.release
        }
        staging {
            initWith debug
            versionNameSuffix "-rc"
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        viewBinding true
    }
}
static def getVersionCodeTimestamp() {
    def currentDate = new Date()
    def formattedDate = currentDate.format('yyyyMMddHH')
    def code = formattedDate.toInteger()
    return code
}

dependencies {


    implementation "androidx.core:core-ktx:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation "com.google.android.material:material:$material_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'


    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
    implementation 'androidx.preference:preference-ktx:1.1.1'


    // navigation component
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"

    // for networking stuff
    implementation("com.squareup.retrofit2:retrofit:${retrofit_version}") {
        exclude module: 'okio'
    }
    implementation("com.squareup.retrofit2:converter-gson:${retrofit_version}") {
        exclude module: 'retrofit'
    }
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.3"))
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'androidx.navigation:navigation-testing:2.5.2'
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    implementation 'com.squareup.retrofit2:converter-scalars:2.1.0'


    // TestImplementations
    implementation "androidx.test:core:1.4.0"
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.robolectric:robolectric:4.8.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "org.mockito:mockito-core:4.7.0"
    testImplementation 'app.cash.turbine:turbine:0.7.0'
    // Android Test Implementations
    androidTestImplementation "junit:junit:4.12"
    //androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:2.12.1"
    androidTestImplementation "org.mockito:mockito-android:4.7.0"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "org.mockito:mockito-core:4.7.0"
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.43.2'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.43.2'
    debugImplementation "androidx.fragment:fragment-testing:1.3.0-alpha08"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation("androidx.test.espresso:espresso-contrib:3.4.0") {
        exclude group: "org.checkerframework", module: "checker"
    }
}